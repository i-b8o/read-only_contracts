syntax = "proto3";

package master.v1;

option go_package = "master/v1;pb_master";

// import "master_message.proto";

message Empty {}

service MasterRegulationGRPC {
    rpc Create(CreateRegulationRequest) returns (CreateRegulationResponse) {};
    rpc GetAll(Empty) returns (GetAllRegulationsResponse) {};
    rpc Delete(DeleteRegulationRequest) returns (Empty) {};
}

service MasterChapterGRPC{
    rpc Create(CreateChapterRequest) returns (CreateChapterResponse) {};
    rpc GetAll(GetAllChaptersRequest) returns (GetAllChaptersResponse) {};
    rpc UpdateAbsent(UpdateAbsentRequest) returns (Empty) {};
    rpc UpdateLinks(UpdateLinksRequest) returns (UpdateLinksResponse) {};
}

service MasterParagraphGRPC{
    rpc Create(CreateParagraphsRequest) returns (Empty) {};
    rpc GetAll(GetAllParagraphsRequest) returns (GetAllParagraphsResponse) {};
    rpc Update(UpdateParagraphRequest) returns (Empty) {};
}

message Regulation {
    uint64 ID             = 1;
    string RegulationName = 2;
    string Abbreviation   = 3;
    string Title          = 4;
}

message GetAllRegulationsResponse {
    repeated Regulation Regulations = 1;
}

message CreateChapterRequest {
	string PseudoId     = 1;
    uint64 RegulationId = 2;
	string ChapterName  = 3;
	string ChapterNum   = 4;
	uint32 OrderNum     = 5;
}

message CreateChapterResponse{
    uint64 ID = 1;
}

message Paragraph {
    uint64    ParagraphId       = 1;
    uint32    ParagraphOrderNum = 2;
    bool      IsTable           = 3;
    bool      IsNFT             = 4;
    bool      HasLinks          = 5;
    string    ParagraphClass    = 6;
    string    ParagraphText     = 7;
    uint64    ChapterId         = 8;
}

message CreateParagraphsRequest {
    repeated Paragraph paragraphs = 1;
}


message CreateRegulationRequest {
    string PseudoId      = 1;
    string RegulationName = 2;
    string Abbreviation   = 3;
    string Title          = 4;
}
message CreateRegulationResponse {
    uint64 ID = 1;
}

message UpdateLinksRequest {
    uint64 ID = 1;
}
message UpdateLinksResponse {
    uint64 ID = 1;
}

message DeleteRegulationRequest {
    uint64 ID = 1;
}

message MasterChapter {
    uint64 ID                           = 1;
    string Name                         = 2;
    string Num                          = 3;
    uint64 RegulationID                 = 4;
    uint32 OrderNum                     = 5;
}


message GetAllChaptersRequest {
    uint64 ID = 1;
}

message GetAllChaptersResponse {
    repeated MasterChapter Chapters = 1;
}

message MasterParagraph {
    uint64 ID        = 1;
    uint32 Num       = 2;
    bool HasLinks    = 3;
    bool IsTable     = 4;
    bool IsNFT       = 5;
    string Class     = 6;
    string Content   = 7;
    uint64 ChapterID = 8;
}

message GetAllParagraphsRequest {
    uint64 ID = 1;
}

message GetAllParagraphsResponse {
    repeated MasterParagraph paragraphs = 1;
}

message UpdateParagraphRequest {
    uint64 ID        = 1;
    string Content   = 2;
}

message UpdateAbsentRequest {
    uint64 ID = 1;
    bool done = 2;
}
